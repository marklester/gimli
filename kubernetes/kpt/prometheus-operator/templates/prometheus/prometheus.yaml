# Source: prometheus-operator/templates/prometheus/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-operator-prometheus
  namespace: monitoring # {"$kpt-set":"namespace"}
  labels:
    app: prometheus-operator-prometheus
    chart: prometheus-operator-9.1.0
    release: "prometheus-operator"
    heritage: "Helm"
spec:
  alerting:
    alertmanagers:
    - namespace: monitoring # {"$kpt-set":"namespace"}
      name: prometheus-operator-alertmanager
      port: web
      pathPrefix: "/"
      apiVersion: v2
  image: quay.io/prometheus/prometheus
  version: v2.19.3
  externalUrl: http://prometheus-operator-prometheus.default:9090
  paused: false
  replicas: 1
  logLevel: info
  logFormat: logfmt
  listenLocal: false
  enableAdminAPI: false
  retention: "30d"
  routePrefix: "/"
  serviceAccountName: prometheus-operator-prometheus
  serviceMonitorSelector:
    matchLabels:
      release: "prometheus-operator"
  serviceMonitorNamespaceSelector: {}
  podMonitorSelector:
    matchLabels:
      release: "prometheus-operator"
  podMonitorNamespaceSelector: {}
  securityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      app: prometheus-operator
      release: "prometheus-operator"
  portName: web
  storage:
    volumeClaimTemplate:
      spec:
        selector:
          matchLabels:
            app: prometheus-operator-prometheus
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gimli-prom-storage
  labels:
    app: prometheus-operator-prometheus
spec:
  capacity:
    storage: 50Gi
  accessModes:
  - ReadWriteOnce # required
  nfs:
    server: gimli.home
    path: "/appdata/prometheus"
